{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-image-editor\\\\src\\\\components\\\\CanvasEditor.jsx\",\n  _s = $RefreshSig$();\n// src/components/CanvasEditor.jsx\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { fabric } from \"fabric\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasEditor = ({\n  imageUrl\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState(null);\n  useEffect(() => {\n    // Create fabric canvas on component mount\n    const fabricCanvas = new fabric.Canvas(\"fabricCanvas\", {\n      width: 800,\n      height: 600\n    });\n    setCanvas(fabricCanvas);\n\n    // Load image onto canvas\n    fabric.Image.fromURL(imageUrl, img => {\n      // Adjust image size if needed\n      img.set({\n        left: 0,\n        top: 0,\n        selectable: false // image stays static in the background\n      });\n      fabricCanvas.setBackgroundImage(img, fabricCanvas.renderAll.bind(fabricCanvas));\n    });\n\n    // Cleanup on component unmount\n    return () => fabricCanvas.dispose();\n  }, [imageUrl]);\n\n  // Function to add text\n  const addText = () => {\n    const text = new fabric.Textbox(\"Your Caption Here\", {\n      left: 50,\n      top: 50,\n      fontSize: 20,\n      fill: \"#ffffff\",\n      backgroundColor: \"rgba(0,0,0,0.5)\"\n    });\n    canvas.add(text);\n  };\n\n  // Function to add shapes\n  const addShape = shapeType => {\n    let shape;\n    switch (shapeType) {\n      case \"circle\":\n        shape = new fabric.Circle({\n          radius: 30,\n          fill: \"red\",\n          left: 100,\n          top: 100\n        });\n        break;\n      case \"rectangle\":\n        shape = new fabric.Rect({\n          width: 60,\n          height: 40,\n          fill: \"blue\",\n          left: 150,\n          top: 150\n        });\n        break;\n      case \"triangle\":\n        shape = new fabric.Triangle({\n          width: 50,\n          height: 50,\n          fill: \"green\",\n          left: 200,\n          top: 200\n        });\n        break;\n      case \"polygon\":\n        shape = new fabric.Polygon([{\n          x: 0,\n          y: 0\n        }, {\n          x: 50,\n          y: 20\n        }, {\n          x: 40,\n          y: 60\n        }, {\n          x: 10,\n          y: 60\n        }], {\n          left: 250,\n          top: 250,\n          fill: \"purple\"\n        });\n        break;\n      default:\n        break;\n    }\n    if (shape) {\n      canvas.add(shape);\n    }\n  };\n\n  // Download the modified image\n  const downloadImage = () => {\n    // Optionally you may want to remove selection borders, controls, etc.\n    canvas.discardActiveObject();\n    canvas.renderAll();\n    const dataURL = canvas.toDataURL({\n      format: \"png\",\n      quality: 1.0\n    });\n\n    // Create a temporary anchor to trigger download\n    const link = document.createElement(\"a\");\n    link.href = dataURL;\n    link.download = \"modified_image.png\";\n    link.click();\n  };\n\n  // Bonus: Log canvas layers and their attributes\n  const logCanvasLayers = () => {\n    const objects = canvas.getObjects();\n    const layers = objects.map(obj => obj.toObject());\n    console.log(layers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Canvas Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addText,\n        children: \"Add Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addShape(\"circle\"),\n        children: \"Add Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addShape(\"rectangle\"),\n        children: \"Add Rectangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addShape(\"triangle\"),\n        children: \"Add Triangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addShape(\"polygon\"),\n        children: \"Add Polygon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadImage,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logCanvasLayers,\n        children: \"Log Layers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"fabricCanvas\",\n      ref: canvasRef,\n      style: {\n        border: \"1px solid #ccc\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"O0M3y07DOrZjgMFb7j1sGn9s6P8=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","fabric","jsxDEV","_jsxDEV","CanvasEditor","imageUrl","_s","canvasRef","canvas","setCanvas","fabricCanvas","Canvas","width","height","Image","fromURL","img","set","left","top","selectable","setBackgroundImage","renderAll","bind","dispose","addText","text","Textbox","fontSize","fill","backgroundColor","add","addShape","shapeType","shape","Circle","radius","Rect","Triangle","Polygon","x","y","downloadImage","discardActiveObject","dataURL","toDataURL","format","quality","link","document","createElement","href","download","click","logCanvasLayers","objects","getObjects","layers","map","obj","toObject","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","ref","style","border","_c","$RefreshReg$"],"sources":["D:/React/react-image-editor/src/components/CanvasEditor.jsx"],"sourcesContent":["// src/components/CanvasEditor.jsx\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { fabric } from \"fabric\";\r\n\r\nconst CanvasEditor = ({ imageUrl }) => {\r\n  const canvasRef = useRef(null);\r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Create fabric canvas on component mount\r\n    const fabricCanvas = new fabric.Canvas(\"fabricCanvas\", {\r\n      width: 800,\r\n      height: 600,\r\n    });\r\n    setCanvas(fabricCanvas);\r\n\r\n    // Load image onto canvas\r\n    fabric.Image.fromURL(imageUrl, (img) => {\r\n      // Adjust image size if needed\r\n      img.set({\r\n        left: 0,\r\n        top: 0,\r\n        selectable: false, // image stays static in the background\r\n      });\r\n      fabricCanvas.setBackgroundImage(img, fabricCanvas.renderAll.bind(fabricCanvas));\r\n    });\r\n\r\n    // Cleanup on component unmount\r\n    return () => fabricCanvas.dispose();\r\n  }, [imageUrl]);\r\n\r\n  // Function to add text\r\n  const addText = () => {\r\n    const text = new fabric.Textbox(\"Your Caption Here\", {\r\n      left: 50,\r\n      top: 50,\r\n      fontSize: 20,\r\n      fill: \"#ffffff\",\r\n      backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    });\r\n    canvas.add(text);\r\n  };\r\n\r\n  // Function to add shapes\r\n  const addShape = (shapeType) => {\r\n    let shape;\r\n    switch (shapeType) {\r\n      case \"circle\":\r\n        shape = new fabric.Circle({\r\n          radius: 30,\r\n          fill: \"red\",\r\n          left: 100,\r\n          top: 100,\r\n        });\r\n        break;\r\n      case \"rectangle\":\r\n        shape = new fabric.Rect({\r\n          width: 60,\r\n          height: 40,\r\n          fill: \"blue\",\r\n          left: 150,\r\n          top: 150,\r\n        });\r\n        break;\r\n      case \"triangle\":\r\n        shape = new fabric.Triangle({\r\n          width: 50,\r\n          height: 50,\r\n          fill: \"green\",\r\n          left: 200,\r\n          top: 200,\r\n        });\r\n        break;\r\n      case \"polygon\":\r\n        shape = new fabric.Polygon(\r\n          [\r\n            { x: 0, y: 0 },\r\n            { x: 50, y: 20 },\r\n            { x: 40, y: 60 },\r\n            { x: 10, y: 60 },\r\n          ],\r\n          {\r\n            left: 250,\r\n            top: 250,\r\n            fill: \"purple\",\r\n          }\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (shape) {\r\n      canvas.add(shape);\r\n    }\r\n  };\r\n\r\n  // Download the modified image\r\n  const downloadImage = () => {\r\n    // Optionally you may want to remove selection borders, controls, etc.\r\n    canvas.discardActiveObject();\r\n    canvas.renderAll();\r\n    const dataURL = canvas.toDataURL({\r\n      format: \"png\",\r\n      quality: 1.0,\r\n    });\r\n\r\n    // Create a temporary anchor to trigger download\r\n    const link = document.createElement(\"a\");\r\n    link.href = dataURL;\r\n    link.download = \"modified_image.png\";\r\n    link.click();\r\n  };\r\n\r\n  // Bonus: Log canvas layers and their attributes\r\n  const logCanvasLayers = () => {\r\n    const objects = canvas.getObjects();\r\n    const layers = objects.map((obj) => obj.toObject());\r\n    console.log(layers);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Canvas Editor</h2>\r\n      <div>\r\n        <button onClick={addText}>Add Text</button>\r\n        <button onClick={() => addShape(\"circle\")}>Add Circle</button>\r\n        <button onClick={() => addShape(\"rectangle\")}>Add Rectangle</button>\r\n        <button onClick={() => addShape(\"triangle\")}>Add Triangle</button>\r\n        <button onClick={() => addShape(\"polygon\")}>Add Polygon</button>\r\n        <button onClick={downloadImage}>Download</button>\r\n        <button onClick={logCanvasLayers}>Log Layers</button>\r\n      </div>\r\n      <canvas id=\"fabricCanvas\" ref={canvasRef} style={{ border: \"1px solid #ccc\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}