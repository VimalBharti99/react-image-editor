{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-image-editor\\\\src\\\\pages\\\\EditorPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { fabric } from \"fabric\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorPage = () => {\n  _s();\n  const location = useLocation();\n  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState(null);\n  const [layers, setLayers] = useState([]);\n  useEffect(() => {\n    const c = new fabric.Canvas(\"fabricCanvas\", {\n      height: 500,\n      width: 800\n    });\n    setCanvas(c);\n  }, []);\n  useEffect(() => {\n    var _location$state;\n    if (canvas && (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.imgUrl) {\n      fabric.Image.fromURL(location.state.imgUrl, img => {\n        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas), {\n          scaleX: canvas.width / img.width,\n          scaleY: canvas.height / img.height\n        });\n      });\n    }\n  }, [canvas, location]);\n  const addText = () => {\n    const text = new fabric.Textbox(\"Your Text\", {\n      left: 100,\n      top: 100,\n      width: 200,\n      fontSize: 20,\n      fill: \"black\",\n      editable: true\n    });\n    canvas.add(text);\n    logLayers();\n  };\n  const addShape = type => {\n    let shape;\n    if (type === \"rect\") {\n      shape = new fabric.Rect({\n        left: 150,\n        top: 150,\n        fill: \"red\",\n        width: 100,\n        height: 100\n      });\n    } else if (type === \"circle\") {\n      shape = new fabric.Circle({\n        left: 150,\n        top: 150,\n        fill: \"blue\",\n        radius: 50\n      });\n    } else if (type === \"triangle\") {\n      shape = new fabric.Triangle({\n        left: 150,\n        top: 150,\n        fill: \"green\",\n        width: 100,\n        height: 100\n      });\n    } else if (type === \"polygon\") {\n      shape = new fabric.Polygon([{\n        x: 200,\n        y: 0\n      }, {\n        x: 250,\n        y: 100\n      }, {\n        x: 150,\n        y: 100\n      }], {\n        fill: 'purple',\n        left: 150,\n        top: 150\n      });\n    }\n    canvas.add(shape);\n    logLayers();\n  };\n  const downloadImage = () => {\n    const dataURL = canvas.toDataURL({\n      format: \"png\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = dataURL;\n    link.download = \"edited-image.png\";\n    link.click();\n  };\n  const logLayers = () => {\n    const objects = canvas.getObjects();\n    const layersData = objects.map(obj => obj.toObject());\n    setLayers(layersData);\n    console.log(\"Layers:\", layersData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Image Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addText,\n        className: \"bg-gray-800 text-white px-3 py-1\",\n        children: \"Add Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addShape(\"rect\"),\n        className: \"bg-red-500 text-white px-3 py-1\",\n        children: \"Rectangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addShape(\"circle\"),\n        className: \"bg-blue-500 text-white px-3 py-1\",\n        children: \"Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addShape(\"triangle\"),\n        className: \"bg-green-500 text-white px-3 py-1\",\n        children: \"Triangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addShape(\"polygon\"),\n        className: \"bg-purple-500 text-white px-3 py-1\",\n        children: \"Polygon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadImage,\n        className: \"bg-yellow-500 text-white px-3 py-1\",\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"fabricCanvas\",\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(EditorPage, \"/xArMVdaYM+z1FvhLEaTJX0SUl4=\", false, function () {\n  return [useLocation];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","fabric","jsxDEV","_jsxDEV","EditorPage","_s","location","canvasRef","canvas","setCanvas","layers","setLayers","c","Canvas","height","width","_location$state","state","imgUrl","Image","fromURL","img","setBackgroundImage","renderAll","bind","scaleX","scaleY","addText","text","Textbox","left","top","fontSize","fill","editable","add","logLayers","addShape","type","shape","Rect","Circle","radius","Triangle","Polygon","x","y","downloadImage","dataURL","toDataURL","format","link","document","createElement","href","download","click","objects","getObjects","layersData","map","obj","toObject","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","ref","_c","$RefreshReg$"],"sources":["D:/React/react-image-editor/src/pages/EditorPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { fabric } from \"fabric\";\r\n\r\nconst EditorPage = () => {\r\n  const location = useLocation();\r\n  const canvasRef = useRef(null);\r\n  const [canvas, setCanvas] = useState(null);\r\n  const [layers, setLayers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const c = new fabric.Canvas(\"fabricCanvas\", {\r\n      height: 500,\r\n      width: 800,\r\n    });\r\n    setCanvas(c);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (canvas && location.state?.imgUrl) {\r\n      fabric.Image.fromURL(location.state.imgUrl, (img) => {\r\n        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas), {\r\n          scaleX: canvas.width / img.width,\r\n          scaleY: canvas.height / img.height,\r\n        });\r\n      });\r\n    }\r\n  }, [canvas, location]);\r\n\r\n  const addText = () => {\r\n    const text = new fabric.Textbox(\"Your Text\", {\r\n      left: 100,\r\n      top: 100,\r\n      width: 200,\r\n      fontSize: 20,\r\n      fill: \"black\",\r\n      editable: true,\r\n    });\r\n    canvas.add(text);\r\n    logLayers();\r\n  };\r\n\r\n  const addShape = (type) => {\r\n    let shape;\r\n    if (type === \"rect\") {\r\n      shape = new fabric.Rect({ left: 150, top: 150, fill: \"red\", width: 100, height: 100 });\r\n    } else if (type === \"circle\") {\r\n      shape = new fabric.Circle({ left: 150, top: 150, fill: \"blue\", radius: 50 });\r\n    } else if (type === \"triangle\") {\r\n      shape = new fabric.Triangle({ left: 150, top: 150, fill: \"green\", width: 100, height: 100 });\r\n    } else if (type === \"polygon\") {\r\n      shape = new fabric.Polygon([\r\n        { x: 200, y: 0 },\r\n        { x: 250, y: 100 },\r\n        { x: 150, y: 100 },\r\n      ], {\r\n        fill: 'purple',\r\n        left: 150,\r\n        top: 150,\r\n      });\r\n    }\r\n    canvas.add(shape);\r\n    logLayers();\r\n  };\r\n\r\n  const downloadImage = () => {\r\n    const dataURL = canvas.toDataURL({ format: \"png\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = dataURL;\r\n    link.download = \"edited-image.png\";\r\n    link.click();\r\n  };\r\n\r\n  const logLayers = () => {\r\n    const objects = canvas.getObjects();\r\n    const layersData = objects.map(obj => obj.toObject());\r\n    setLayers(layersData);\r\n    console.log(\"Layers:\", layersData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"text-xl font-bold mb-2\">Image Editor</h1>\r\n      <div className=\"mb-2 space-x-2\">\r\n        <button onClick={addText} className=\"bg-gray-800 text-white px-3 py-1\">Add Text</button>\r\n        <button onClick={() => addShape(\"rect\")} className=\"bg-red-500 text-white px-3 py-1\">Rectangle</button>\r\n        <button onClick={() => addShape(\"circle\")} className=\"bg-blue-500 text-white px-3 py-1\">Circle</button>\r\n        <button onClick={() => addShape(\"triangle\")} className=\"bg-green-500 text-white px-3 py-1\">Triangle</button>\r\n        <button onClick={() => addShape(\"polygon\")} className=\"bg-purple-500 text-white px-3 py-1\">Polygon</button>\r\n        <button onClick={downloadImage} className=\"bg-yellow-500 text-white px-3 py-1\">Download</button>\r\n      </div>\r\n      <canvas id=\"fabricCanvas\" ref={canvasRef}></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}