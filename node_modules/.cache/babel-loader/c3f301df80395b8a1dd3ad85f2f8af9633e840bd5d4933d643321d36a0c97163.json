{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-image-editor\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\n// src/components/SearchPage.jsx\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = ({\n  onSelectImage\n}) => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const searchImages = async () => {\n    try {\n      // Replace YOUR_ACCESS_KEY with your actual Unsplash API key\n      const response = await axios.get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          query,\n          per_page: 20\n        },\n        headers: {\n          Authorization: \"Client-ID YOUR_ACCESS_KEY\"\n        }\n      });\n      setResults(response.data.results);\n    } catch (error) {\n      console.error(\"Error fetching images\", error);\n      // Provide user feedback as needed\n    }\n  };\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    if (!query.trim()) {\n      alert(\"Please enter a search query\");\n      return;\n    }\n    searchImages();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearchSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Enter keywords...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: results.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-thumbnail\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.urls.thumb,\n          alt: image.alt_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelectImage(image.urls.regular),\n          children: \"Add Captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"Grp0ouI1isRc8g0LMx1FfgxNSWM=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchPage","onSelectImage","_s","query","setQuery","results","setResults","searchImages","response","get","params","per_page","headers","Authorization","data","error","console","handleSearchSubmit","e","preventDefault","trim","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","className","map","image","src","urls","thumb","alt","alt_description","onClick","regular","id","_c","$RefreshReg$"],"sources":["D:/React/react-image-editor/src/components/SearchPage.jsx"],"sourcesContent":["// src/components/SearchPage.jsx\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchPage = ({ onSelectImage }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  const searchImages = async () => {\r\n    try {\r\n      // Replace YOUR_ACCESS_KEY with your actual Unsplash API key\r\n      const response = await axios.get(\"https://api.unsplash.com/search/photos\", {\r\n        params: { query, per_page: 20 },\r\n        headers: {\r\n          Authorization: \"Client-ID YOUR_ACCESS_KEY\",\r\n        },\r\n      });\r\n      setResults(response.data.results);\r\n    } catch (error) {\r\n      console.error(\"Error fetching images\", error);\r\n      // Provide user feedback as needed\r\n    }\r\n  };\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!query.trim()) {\r\n      alert(\"Please enter a search query\");\r\n      return;\r\n    }\r\n    searchImages();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search Images</h2>\r\n      <form onSubmit={handleSearchSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Enter keywords...\"\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"results\">\r\n        {results.map((image) => (\r\n          <div key={image.id} className=\"image-thumbnail\">\r\n            <img src={image.urls.thumb} alt={image.alt_description} />\r\n            <button onClick={() => onSelectImage(image.urls.regular)}>Add Captions</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,wCAAwC,EAAE;QACzEC,MAAM,EAAE;UAAEP,KAAK;UAAEQ,QAAQ,EAAE;QAAG,CAAC;QAC/BC,OAAO,EAAE;UACPC,aAAa,EAAE;QACjB;MACF,CAAC,CAAC;MACFP,UAAU,CAACE,QAAQ,CAACM,IAAI,CAACT,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;IACF;EACF,CAAC;EAED,MAAME,kBAAkB,GAAIC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAChB,KAAK,CAACiB,IAAI,CAAC,CAAC,EAAE;MACjBC,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IACAd,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,oBACER,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB3B,OAAA;MAAM4B,QAAQ,EAAEV,kBAAmB;MAAAK,QAAA,gBACjCvB,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1B,KAAM;QACb2B,QAAQ,EAAGZ,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC;MAAmB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACF3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACP3B,OAAA;MAAKkC,SAAS,EAAC,SAAS;MAAAX,QAAA,EACrBjB,OAAO,CAAC6B,GAAG,CAAEC,KAAK,iBACjBpC,OAAA;QAAoBkC,SAAS,EAAC,iBAAiB;QAAAX,QAAA,gBAC7CvB,OAAA;UAAKqC,GAAG,EAAED,KAAK,CAACE,IAAI,CAACC,KAAM;UAACC,GAAG,EAAEJ,KAAK,CAACK;QAAgB;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1D3B,OAAA;UAAQ0C,OAAO,EAAEA,CAAA,KAAMxC,aAAa,CAACkC,KAAK,CAACE,IAAI,CAACK,OAAO,CAAE;UAAApB,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFvES,KAAK,CAACQ,EAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnDIF,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AAqDhB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}