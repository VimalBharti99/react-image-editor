{"ast":null,"code":"const searchImages = async searchTerm => {\n  try {\n    const PIXABAY_API_KEY = \"your_valid_api_key_here\";\n    const url = `https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(searchTerm)}&image_type=photo`;\n    const res = await fetch(url);\n    if (!res.ok) {\n      const errorText = await res.text(); // Read raw error message\n      throw new Error(`Pixabay API Error: ${res.status} - ${errorText}`);\n    }\n    const data = await res.json();\n    console.log(data.hits); // array of image objects\n    setImages(data.hits);\n  } catch (err) {\n    console.error(\"Error fetching images:\", err.message);\n    alert(\"Image fetch failed. Please check your API key or try a different search.\");\n  }\n};\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const SearchPage = () => {\n//   const [query, setQuery] = useState(\"\");\n//   const [results, setResults] = useState([]);\n//   const navigate = useNavigate();\n\n//   const handleSearch = async () => {\n//     const res = await fetch(\n//       `https://pixabay.com/api/?key=36116218-fad8a8a8b1c78bdb73868f804&q=${query}&image_type=photo`\n//     );\n//     const data = await res.json();\n//     setResults(data.hits);\n//   };\n\n//   const handleEdit = (imgUrl) => {\n//     navigate(\"/editor\", { state: { imgUrl } });\n//   };\n\n//   return (\n//     <div className=\"p-4\">\n//       <h1 className=\"text-xl font-bold mb-2\">Image Search</h1>\n//       <input\n//         className=\"border p-2 mr-2\"\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//         placeholder=\"Search images\"\n//       />\n//       <button className=\"bg-blue-500 text-white px-4 py-2\" onClick={handleSearch}>\n//         Search\n//       </button>\n//       <div className=\"grid grid-cols-3 gap-4 mt-4\">\n//         {results.map((img) => (\n//           <div key={img.id} className=\"border p-2\">\n//             <img src={img.webformatURL} alt=\"\" className=\"w-full\" />\n//             <button\n//               onClick={() => handleEdit(img.largeImageURL)}\n//               className=\"mt-2 bg-green-500 text-white px-2 py-1\"\n//             >\n//               Add Captions\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SearchPage;","map":{"version":3,"names":["searchImages","searchTerm","PIXABAY_API_KEY","url","encodeURIComponent","res","fetch","ok","errorText","text","Error","status","data","json","console","log","hits","setImages","err","error","message","alert"],"sources":["D:/React/react-image-editor/src/pages/SearchPage.jsx"],"sourcesContent":["const searchImages = async (searchTerm) => {\r\n  try {\r\n    const PIXABAY_API_KEY = \"your_valid_api_key_here\";\r\n    const url = `https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(searchTerm)}&image_type=photo`;\r\n    \r\n    const res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      const errorText = await res.text(); // Read raw error message\r\n      throw new Error(`Pixabay API Error: ${res.status} - ${errorText}`);\r\n    }\r\n\r\n    const data = await res.json();\r\n    console.log(data.hits); // array of image objects\r\n    setImages(data.hits);\r\n  } catch (err) {\r\n    console.error(\"Error fetching images:\", err.message);\r\n    alert(\"Image fetch failed. Please check your API key or try a different search.\");\r\n  }\r\n};\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const SearchPage = () => {\r\n//   const [query, setQuery] = useState(\"\");\r\n//   const [results, setResults] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSearch = async () => {\r\n//     const res = await fetch(\r\n//       `https://pixabay.com/api/?key=36116218-fad8a8a8b1c78bdb73868f804&q=${query}&image_type=photo`\r\n//     );\r\n//     const data = await res.json();\r\n//     setResults(data.hits);\r\n//   };\r\n\r\n//   const handleEdit = (imgUrl) => {\r\n//     navigate(\"/editor\", { state: { imgUrl } });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-4\">\r\n//       <h1 className=\"text-xl font-bold mb-2\">Image Search</h1>\r\n//       <input\r\n//         className=\"border p-2 mr-2\"\r\n//         value={query}\r\n//         onChange={(e) => setQuery(e.target.value)}\r\n//         placeholder=\"Search images\"\r\n//       />\r\n//       <button className=\"bg-blue-500 text-white px-4 py-2\" onClick={handleSearch}>\r\n//         Search\r\n//       </button>\r\n//       <div className=\"grid grid-cols-3 gap-4 mt-4\">\r\n//         {results.map((img) => (\r\n//           <div key={img.id} className=\"border p-2\">\r\n//             <img src={img.webformatURL} alt=\"\" className=\"w-full\" />\r\n//             <button\r\n//               onClick={() => handleEdit(img.largeImageURL)}\r\n//               className=\"mt-2 bg-green-500 text-white px-2 py-1\"\r\n//             >\r\n//               Add Captions\r\n//             </button>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SearchPage;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,UAAU,IAAK;EACzC,IAAI;IACF,MAAMC,eAAe,GAAG,yBAAyB;IACjD,MAAMC,GAAG,GAAG,gCAAgCD,eAAe,MAAME,kBAAkB,CAACH,UAAU,CAAC,mBAAmB;IAElH,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IAE5B,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE;MACX,MAAMC,SAAS,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;MACpC,MAAM,IAAIC,KAAK,CAAC,sBAAsBL,GAAG,CAACM,MAAM,MAAMH,SAAS,EAAE,CAAC;IACpE;IAEA,MAAMI,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC;IACxBC,SAAS,CAACL,IAAI,CAACI,IAAI,CAAC;EACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZJ,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAACE,OAAO,CAAC;IACpDC,KAAK,CAAC,0EAA0E,CAAC;EACnF;AACF,CAAC;;AAID;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}